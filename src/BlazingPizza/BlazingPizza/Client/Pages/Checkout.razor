@page "/checkout"
@inject HttpClient HttpClient
@inject OrderState OrderState
@inject NavigationManager  NavigationManager

<div class="main">
    <EditForm Model="OrderState.Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
        <div class="checkout-cols">
            <div class="checkout-order-details">
                <h4>Review order</h4>
                <OrderReview Order="OrderState.Order" />
            </div>
            <div class="checkout-delivery-address">
                <h4>Deliver to...</h4>
                <AddressEditor Address="OrderState.Order.DeliveryAddress" />
            </div>
        </div>
        <button class="checkout-button btn btn-warning" disabled="@(isSubmitting == true)">
            Place order
        </button>
        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {
    bool isSubmitting;

    async Task PlaceOrder()
    {
        isSubmitting = true;
        var orderId = await HttpClient.PostJsonAsync<int>("orders", OrderState.Order);
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{orderId}");
        isSubmitting = false;
    }

}
